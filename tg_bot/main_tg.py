import base64
from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.ext import Application, CallbackQueryHandler, CommandHandler, ContextTypes, MessageHandler, filters
from config import BOT_TOKEN, REST_API_TOKENS
import requests
import datetime


async def start(update, context):
    user = update.effective_user

    # –ü–µ—Ä–µ–≤–æ–¥ —Å–æ—Å—Ç–æ—è–Ω–∏—è —é–∑–µ—Ä–∞ –≤ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º(–Ω–µ –∑–∞–ø–æ–ª–Ω—è–µ—Ç –ø—Ä–æ–µ–∫—Ç, –Ω–µ —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç)
    list_of_states[user.id] = 'without_condition'
    the_naughty_list[user.id] = ''
    context.user_data['current_code'] = ''

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–≤–∞—Ç–∞—Ä–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    result = await context.bot.get_user_profile_photos(user.id)
    file_id = result['photos'][0][0]['file_id']
    file = await context.bot.get_file(file_id)
    url = file.file_path
    response = requests.get(url)
    encoded_content = base64.b64encode(response.content)

    # –°–æ–∑–¥–∞–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞ –¥–ª—è —é–∑–µ—Ä–∞
    requests.post('http://127.0.0.1/api/v1/users', json={'id': user.id, 'username': user.first_name,
                                                         'auth_date': str(datetime.date.today()),
                                                         'token': REST_API_TOKENS[0],
                                                         'photo_url': encoded_content.decode('utf-8')})
    await update.message.reply_html(
        f'üëã –ü—Ä–∏–≤–µ—Ç, {user.mention_html()}. –Ø –±–æ—Ç –ø—Ä–∏ —Å–∞–π—Ç–µ:'
        f'\n http://gaduka.sytes.net'
        f'\n'
        f'\nüêç–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –∫–∞–∫ –Ω–∞—É—á–∏—Ç—å—Å—è –ø–∏—Å–∞—Ç—å –∫–æ–¥, —Ç–∞–∫ –∏ –∑–∞–ø—É—Å–∫–∞—Ç—å –µ–≥–æ'
        f'\n'
        f'\nüëâ –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ, –≤–≤–µ–¥–∏—Ç–µ /help!')


async def help_command(update, context):
    user = update.effective_user

    # –ü–µ—Ä–µ–≤–æ–¥ —Å–æ—Å—Ç–æ—è–Ω–∏—è —é–∑–µ—Ä–∞ –≤ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º(–Ω–µ –∑–∞–ø–æ–ª–Ω—è–µ—Ç –ø—Ä–æ–µ–∫—Ç, –Ω–µ —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç)
    list_of_states[user.id] = 'without_condition'
    the_naughty_list[user.id] = ''
    context.user_data['current_code'] = ''

    # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –æ—Ç–≤–µ—Ç–∞
    text_message = f'üêç –Ø –º–æ–≥—É –ø–æ–º–æ—á—å –≤–∞–º —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ —è–∑—ã–∫–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –ì–∞–¥—é–∫–∞.' \
                   f' –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–π—Ç–∏ –∫—É—Ä—Å –∏–ª–∏ –ø–æ—á–∏—Ç–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é –ø–æ –ì–∞–¥—é–∫–µ,' \
                   f' –∞ —Ç–∞–∫–∂–µ –∑–∞–ø—É—Å–∫–∞—Ç—å —Å–≤–æ–π –∫–æ–¥ –Ω–∞ —ç—Ç–æ–º —è–∑—ã–∫–µ –ø—Ä—è–º–æ –∑–¥–µ—Å—å.' \
                   f'\n' \
                   f'\nüïπÔ∏è –í—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:' \
                   f'\n' \
                   f'\nüó∫Ô∏è –ù–∞–≤–∏–≥–∞—Ü–∏—è:' \
                   f'\n ‚Ä¢ /help - –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–±–æ –º–Ω–µ ' \
                   f'\n ‚Ä¢ /menu - –ú–µ–Ω—é –≥–ª–∞–≤–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏.' \
                   f'\n' \
                   f'\nüìö –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥–∞–¥—é–∫–µ:' \
                   f'\n ‚Ä¢ /doc - –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –∏ –∫—É—Ä—Å –ø–æ –≥–∞–¥—é–∫–µ' \
                   f'\n' \
                   f'\n‚å®Ô∏è –†–∞–±–æ—Ç–∞ —Å —è–∑—ã–∫–æ–º:' \
                   f'\n ‚Ä¢ /profile - –í–∞—à–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø—Ä–æ–µ–∫—Ç—ã' \
                   f'\n ‚Ä¢ /create - –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞' \
                   f'\n ‚Ä¢ /run - –ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ –≤–∞—à–µ–≥–æ –∫–æ–¥–∞ '

    # –û—Ç–≤–µ—Ç –Ω–∞ /help –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–æ–≥–æ –±—ã–ª–∞ –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ –∏–ª–∏ –ø—Ä–æ–∏–∑–æ—à–µ–ª –≤—ã–∑–æ–≤ –ø–æ –∫–æ–º–∞–Ω–¥–µ
    try:
        await update.callback_query.message.reply_text(text_message)
    except AttributeError:
        await update.message.reply_text(text_message)


async def menu_command(update, context):
    user = update.effective_user
    message = update.effective_message

    # –ø–µ—Ä–µ–≤–æ–¥ —Å–æ—Å—Ç–æ—è–Ω–∏—è —é–∑–µ—Ä–∞ –≤ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º(–Ω–µ –∑–∞–ø–æ–ª–Ω—è–µ—Ç –ø—Ä–æ–µ–∫—Ç, –Ω–µ —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π)
    list_of_states[user.id] = 'without_condition'
    the_naughty_list[user.id] = ''
    context.user_data['current_code'] = ''

    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    keyboard = [
        [InlineKeyboardButton("üìÇ –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç", callback_data="create")],
        [InlineKeyboardButton("üöÄ–ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ –∫–æ–¥–∞", callback_data="run")],
        [InlineKeyboardButton("üìö–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –∏ –≤–∞—à–∏ –ø—Ä–æ–µ–∫—Ç—ã", callback_data="profile")],
        [InlineKeyboardButton("‚Äçüéì–ö—É—Ä—Å –∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è", callback_data="dok")],
        [InlineKeyboardButton("‚Äç‚ùì –ü–æ–º–æ—â—å", callback_data="help"),
         InlineKeyboardButton("‚ùóÔ∏è –û –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏", callback_data="help")]]
    reply_markup = InlineKeyboardMarkup(keyboard)

    # –û—Ç–≤–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É /menu
    await message.reply_text(f'üëã –ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞.'
                             f' –ù–∏–∂–µ –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –¥–µ–π—Å—Ç–≤–∏–π:'
                             f'\n'
                             f'\n'
                             f'\n‚ùï–í –ø—Ä–æ—Ü–µ—Å—Å–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞ –≤—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å'
                             f'\n- /help'
                             f'\n- ‚ùì –ü–æ–º–æ—â—å'
                             f'\n–ß—Ç–æ–±—ã –Ω–∞–π—Ç–∏ —Å–ø—Ä–∞–≤–æ—á–Ω—É—é'
                             f' –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –∫–∞–∂–¥–æ–π –∫–æ–º–∞–Ω–¥—ã.'
                             f'\n'
                             f'\n', reply_markup=reply_markup)


async def profile_command(update, context):
    user = update.effective_user
    # –ü–µ—Ä–µ–≤–æ–¥ —Å–æ—Å—Ç–æ—è–Ω–∏—è —é–∑–µ—Ä–∞ –≤ –ø–æ–¥–≥–æ—Ç–æ–≤–∫—É –∫ —Ä–∞–±–æ—Ç–µ —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º –ø—Ä–æ–µ–∫—Ç–æ–º
    list_of_states[user.id] = 'Transition_to_editing'
    the_naughty_list[user.id] = ''
    context.user_data['current_code'] = ''

    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    response = requests.get(f'http://127.0.0.1/api/v1/users/{user.id}').json()
    result_list = response["user"]["projects"]

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–≤–∞—Ç–∞—Ä–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    result_photo = await context.bot.get_user_profile_photos(user.id)
    file_id = result_photo['photos'][0][0]['file_id']

    # –ü—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ —Ü–∏–∫–ª–æ–º –ø–æ —Å–ø–∏—Å–∫—É –ø—Ä–æ–µ–∫—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ —Å –∏—Ö –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏
    keyboard = []
    for i in range(len(result_list)):
        keyboard_line = [InlineKeyboardButton(result_list[i]["name"],
                                              callback_data=f'run_project {result_list[i]["id"]}'
                                                            f' {result_list[i]["name"]}')]
        keyboard.append(keyboard_line)
    reply_markup = InlineKeyboardMarkup(keyboard)

    # –¢–µ–∫—Å—Ç –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /profile
    text_message = f'\n‚ùï–ë—ã—Å—Ç—Ä—ã–π –¥–æ—Å—Ç—É–ø –≥–ª–∞–≤–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ /help, /menu' \
                   f'\n' \
                   f'\nüë®‚Äçüíª –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—à–µ–º –ø—Ä–æ—Ñ–∏–ª–µ:' \
                   f'\n' \
                   f'\nüÜî Id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user.id}' \
                   f'\n' \
                   f'\nüë§ –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user.first_name}' \
                   f'\n' \
                   f'\nüìï –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–µ–∫—Ç–æ–≤: {len(result_list)}' \
                   f'\n' \
                   f'\nüìö –í–∞—à–∏ –ø—Ä–æ–µ–∫—Ç—ã:'

    # –û—Ç–≤–µ—Ç –Ω–∞ /profile –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–æ–≥–æ –±—ã–ª–∞ –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ –∏–ª–∏ –ø—Ä–æ–∏–∑–æ—à–µ–ª –≤—ã–∑–æ–≤ –ø–æ –∫–æ–º–∞–Ω–¥–µ
    try:
        await update.callback_query.message.reply_photo(file_id, caption=text_message, reply_markup=reply_markup)
    except AttributeError:
        await update.message.reply_photo(file_id, caption=text_message, reply_markup=reply_markup)


async def create_command(update, context):
    user = update.effective_user

    # –ø–µ—Ä–µ–≤–æ–¥ —Å–æ—Å—Ç–æ—è–Ω–∏—è —é–∑–µ—Ä–∞ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞
    list_of_states[user.id] = 'creating_a_project'
    the_naughty_list[user.id] = ''
    context.user_data['current_code'] = ''

    # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –æ—Ç–≤–µ—Ç–∞
    text_message = f'üë∑‚Äç‚ôÇÔ∏è –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–µ–Ω—é —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–æ–≤!' \
                   f'\n' \
                   f'\nüôÇ –í—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç, –æ—Ç–ø—Ä–∞–≤–∏–≤ –æ–¥–Ω–æ –ª—é–±–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –ø–æ–¥–ø–∏—Å—å—é –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º.' \
                   f'\n‚ùï –ï—Å–ª–∏ –≤—ã –Ω–µ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –ø—Ä–æ—Å—Ç–æ —É–∫–∞–∂–∏—Ç–µ –∂–µ–ª–∞–µ–º–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞, –∏ –∏–∫–æ–Ω–∫–∞' \
                   f' –±—É–¥–µ—Ç –ø–æ–¥–æ–±—Ä–∞–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.' \
                   f'\n' \
                   f'\n' \
                   f'\nüåÉ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ —Ñ–æ—Ç–æ —Å—Ç–∞–Ω–µ—Ç –∏–∫–æ–Ω–∫–æ–π –ø—Ä–æ–µ–∫—Ç–∞.' \
                   f'\n‚ùï –ò–∫–æ–Ω–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ –Ω—É–∂–Ω–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è' \
                   f' –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞ —Å–∞–π—Ç–µ.' \
                   f'\n‚ùï –ü–æ–¥–ø–∏—Å—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞–Ω–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ–º –ø—Ä–æ–µ–∫—Ç–∞.' \
                   f'\n' \
                   f'\n‚ùóÔ∏è –ß—Ç–æ–±—ã –æ—Ç–º–µ–Ω–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /menu –∏–ª–∏ /help.'

    # –û—Ç–≤–µ—Ç –Ω–∞ /create –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–æ–≥–æ –±—ã–ª–∞ –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ –∏–ª–∏ –ø—Ä–æ–∏–∑–æ—à–µ–ª –≤—ã–∑–æ–≤ –ø–æ –∫–æ–º–∞–Ω–¥–µ
    try:
        await update.callback_query.message.reply_text(text_message)
    except AttributeError:
        await update.message.reply_text(text_message)


async def create_saving_command(update, context):
    user = update.effective_user

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    source = requests.get(f'http://127.0.0.1/api/v1/projects/{update.callback_query.data.split()[1]}').json()
    print(requests.put(f'http://127.0.0.1/api/v1/projects/{update.callback_query.data.split()[1]}',
                       json={'code': context.user_data['current_code'],
                             'token': REST_API_TOKENS[0],
                             'name': source['project']['name'],
                             'img': source['project']['img']}).json())

    # –ü–µ—Ä–µ–≤–æ–¥ —Å–æ—Å—Ç–æ—è–Ω–∏—è —é–∑–µ—Ä–∞ –≤ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º(–Ω–µ –∑–∞–ø–æ–ª–Ω—è–µ—Ç –ø—Ä–æ–µ–∫—Ç, –Ω–µ —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π)
    list_of_states[user.id] = 'without_condition'
    the_naughty_list[user.id] = ''
    context.user_data['current_code'] = ''

    # –û–ø–æ–≤–µ—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–± —É—Å–ø–µ—à–Ω–æ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏
    await update.callback_query.message.reply_text('‚úÖ –í–∞—à –ø—Ä–æ–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω!'
                                                   '\n'
                                                   '\n‚ùï –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∞—à –ø—Ä–æ–µ–∫—Ç,'
                                                   ' –ø–µ—Ä–µ–π–¥—è –≤ –º–µ–Ω—é –∏ –≤—ã–±—Ä–∞–≤ –≤–∫–ª–∞–¥–∫—É:'
                                                   '\nüìö –í–∞—à–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø—Ä–æ–µ–∫—Ç—ã'
                                                   '\n–ò–ª–∏ –∂–µ –≤—ã –º–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è'
                                                   ' –∫–æ–º–∞–Ω–¥–æ–π /profile.'
                                                   '\n'
                                                   '\nü´∂ –ü—Ä–∏—è—Ç–Ω–æ–≥–æ –∫–æ–¥–∏–Ω–≥–∞! ü´∂')


async def run_command(update, context):
    user = update.effective_user
    print(list_of_states[user.id])

    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–¥–∞
    current_code = "#***–ú–µ—Å—Ç–æ –¥–ª—è –≤–∞—à–µ–≥–æ –∫–æ–¥–∞***"

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–∫—Ä—ã—Ç –ª–∏ –ø—Ä–æ–µ–∫—Ç –∏–ª–∏ –∂–µ —ç—Ç–æ —Å–≤–æ–±–æ–¥–Ω—ã–π –∑–∞–ø—É—Å–∫
    if list_of_states[user.id] == 'Transition_to_editing':

        # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–æ–µ–∫—Ç–µ
        response = requests.get(f"http://127.0.0.1/api/v1/projects/{update.callback_query.data.split()[1]}").json()

        # –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞
        list_of_states[user.id] = f'filling_out_the_project {update.callback_query.data.split()[1]}'
        the_naughty_list[user.id] = ''

        # –ï—Å–ª–∏ –≤ –ø—Ä–æ–µ–∫—Ç–µ –µ—Å—Ç—å –∫–æ–¥
        if response['project']['code']:

            # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–¥–∞ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏
            current_code = response['project']['code']

            # –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫
            keyboard = [
                [InlineKeyboardButton("‚úÖ –ó–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–¥", callback_data="create")],
                [InlineKeyboardButton("‚ùóÔ∏è–£–¥–∞–ª–∏—Ç—å –ø—Ä–æ–µ–∫—Ç", callback_data="deletion")]]
        else:
            # –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫
            keyboard = [[InlineKeyboardButton("‚ùóÔ∏è–£–¥–∞–ª–∏—Ç—å –ø—Ä–æ–µ–∫—Ç", callback_data="deletion")]]

    else:
        # –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –∫–æ–¥–∞
        list_of_states[user.id] = 'filling_in_an_uncreated_project'

        # –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫
        keyboard = [
            [InlineKeyboardButton("üì• –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç —Å —Ç–µ–∫—É—â–∏–º –∫–æ–¥–æ–º", callback_data="create")]
        ]

    # –ü—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫
    reply_markup = InlineKeyboardMarkup(keyboard)

    # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞
    text_message = \
        '‚ùì–ö–æ–¥ –±—É–¥–µ—Ç —Å—á–∏—Ç—ã–≤–∞—Ç—å—Å—è ‚ÄºÔ∏è–ø–æ–ª–Ω–æ—Å—Ç—å—é‚ÄºÔ∏è —Å–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è' \
        '\n‚ùî–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –≤—ã–π—Ç–∏ –∏–∑ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π /menu. üö™' \
        '\n' \
        '\n‚úèÔ∏è–í–∞—à –∫–æ–¥ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–ø—É—Å–∫–∞:' \
        '\n' \
        f'\n{current_code}' \
        '\n' \
        '\n.............................' \
        '\n' \
        '\n' \
        '\n‚ùóÔ∏è–ö–æ–¥ –≤—ã–≤–æ–¥–∏—Ç:' \
        '\n‚ùï–í—ã–≤–µ–¥–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –±–µ–∑ —Ñ–æ—Ç–æ –∏–ª–∏ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ñ–æ—Ç–æ —Å–ª–µ–¥—É—é—â–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º.' \
        '\n‚ùï–ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ—Ç —Ç–æ –∫–æ–¥ –Ω–∏—á–µ–≥–æ –Ω–µ –≤—ã–≤–æ–¥–∏—Ç.' \
        '\n‚ùï–ï—Å–ª–∏ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞ –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç –æ—à–∏–±–∫–∞ —Ç–æ –≤ —Å–ª–µ–¥—É—é—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –æ–Ω–∞ –±—É–¥–µ—Ç –≤—ã–≤–µ–¥–µ–Ω–Ω–∞.'
    try:
        await update.callback_query.message.reply_text(text_message, reply_markup=reply_markup)
    except AttributeError:
        await update.message.reply_text(text_message, reply_markup=reply_markup)


async def text_echo(update, context):
    user = update.effective_user
    message = update.effective_message
    try:
        # –û—Ç–≤–µ—Ç –≤ —Å–ª—É—á–∞–µ –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ—Ç
        if list_of_states[user.id] == 'without_condition':
            await update.effective_message.reply_text('ü§ñ –Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é, —á—Ç–æ –≤—ã –Ω–∞–ø–∏—Å–∞–ª–∏, –ø–æ—Ç–æ–º—É —á—Ç–æ —è –≤—Å–µ–≥–æ –ª–∏—à—å –±–æ—Ç.'
                                                      ' –û–¥–Ω–∞–∫–æ, —è –º–æ–≥—É –ø–æ–º–æ—á—å –≤–∞–º —Å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö –∫–æ–º–∞–Ω–¥.'
                                                      '\n'
                                                      '\n‚ùì –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –º–æ–∏—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π,'
                                                      ' –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /help.'
                                                      '\n‚ùï–¢–∞–º –≤—ã –Ω–∞–π–¥–µ—Ç–µ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –∏ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞'
                                                      ' –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –º–µ–Ω—è.'
                                                      '\n'
                                                      '\nü´∂ –ü—Ä–∏—è—Ç–Ω–æ–≥–æ –∫–æ–¥–∏–Ω–≥–∞! ü´∂')
        # –û—Ç–≤–µ—Ç –ø—Ä–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞
        elif list_of_states[user.id] == 'creating_a_project':
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ö–æ–¥–∏—Ç –ª–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è
            if message.photo and message.media_group_id:
                # –ë–µ–∑ —ç—Ç–æ–≥–æ if –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å—Ç–æ–ª—å–∫–æ —Ä–∞–∑ —Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ —Å–∫–æ–ª—å–∫–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –±—ã–ª–æ —Ñ–æ—Ç–æ
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ç–æ —á—Ç–æ —Ñ–æ—Ç–æ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∞—Ç –∫ —Ä–∞–∑–Ω—ã–º –∞–ª—å–±–æ–º–∞–º
                if the_naughty_list[user.id] == message.media_group_id:
                    pass
                else:
                    # –û—Ç–≤–µ—Ç –≤ —Å–ª—É—á–∞–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–ª—å–±–æ–º–∞ –≤–º–µ—Å—Ç–æ –æ–¥–Ω–æ–≥–æ —Ñ–æ—Ç–æ
                    the_naughty_list[user.id] = message.media_group_id
                    await update.effective_message.reply_text('ü§ñ –ü—Ä–æ—Å—Ç–∏, –Ω–æ —è –Ω–µ –º–æ–≥—É —Å–æ–∑–¥–∞—Ç—å –ø—Ä–æ–µ–∫—Ç'
                                                              ' —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –∏–∫–æ–Ω–∫–∞–º–∏. '
                                                              '\n'
                                                              '\nüíõ –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ –æ–¥–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ'
                                                              ' —Å –ø–æ–¥–ø–∏—Å—å—é, –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã —è —Å–º–æ–≥ —Å–æ–∑–¥–∞—Ç—å'
                                                              ' –¥–ª—è —Ç–µ–±—è –ø—Ä–æ–µ–∫—Ç'
                                                              '\n'
                                                              '\nüëç –Ø –≤–µ—Ä—é, —á—Ç–æ —É —Ç–µ–±—è —ç—Ç–æ –ø–æ–ª—É—á–∏—Ç—Å—è –∏ '
                                                              '\nü´∂ –ü—Ä–∏—è—Ç–Ω–æ–≥–æ –∫–æ–¥–∏–Ω–≥–∞! ü´∂')
            else:
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Ñ–æ—Ç–æ
                if message.photo:
                    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –ø–æ–¥–ø–∏—Å–∏ –∫ —Ñ–æ—Ç–æ
                    if message.caption:
                        # –ø–µ—Ä–µ–≤–æ–¥ —Å–æ—Å—Ç–æ—è–Ω–∏—è —é–∑–µ—Ä–∞ –≤ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º(–Ω–µ –∑–∞–ø–æ–ª–Ω—è–µ—Ç –ø—Ä–æ–µ–∫—Ç, –Ω–µ —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π)
                        list_of_states[user.id] = 'without_condition'
                        the_naughty_list[user.id] = ''
                        context.user_data['current_code'] = ''

                        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ñ–æ—Ç–æ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø–µ—Ä–µ–≤–æ–¥ –µ–≥–æ –≤ —Ñ–æ—Ä–º–∞—Ç base64
                        photo = update.message.photo[-1]
                        file = await context.bot.get_file(photo.file_id)
                        url = file.file_path
                        response = requests.get(url)
                        encoded_content = base64.b64encode(response.content)

                        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –±—ã–ª –ª–∏ –≤ —Å–æ–∑–¥–∞–≤–∞–µ–º–æ–º –ø—Ä–æ–µ–∫—Ç–µ –∫–æ–¥
                        if context.user_data['current_code']:
                            requests.post('http://127.0.0.1/api/v1/projects',
                                          json={'user_id': user.id,
                                                'name': message.caption,
                                                'token': REST_API_TOKENS[0],
                                                'img': encoded_content.decode('utf-8'),
                                                'code': context.user_data['current_code']})

                            # –û–±–Ω—É–ª–µ–Ω–∏–µ –∫–æ–¥–∞
                            context.user_data['current_code'] = ''
                        else:
                            requests.post('http://127.0.0.1/api/v1/projects',
                                          json={'user_id': user.id,
                                                'name': message.caption,
                                                'token': REST_API_TOKENS[0],
                                                'img': encoded_content.decode('utf-8')})

                        # –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º —Å–æ–∑–¥–∞–Ω–∏–∏ –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
                        await update.effective_message.reply_text('‚úÖ –í–∞—à –ø—Ä–æ–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!'
                                                                  '\n'
                                                                  '\n‚ùï –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∞—à –ø—Ä–æ–µ–∫—Ç,'
                                                                  ' –ø–µ—Ä–µ–π–¥—è –≤ –º–µ–Ω—é –∏ –≤—ã–±—Ä–∞–≤ –≤–∫–ª–∞–¥–∫—É:'
                                                                  '\nüìö –í–∞—à–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø—Ä–æ–µ–∫—Ç—ã'
                                                                  '\n–ò–ª–∏ –∂–µ –≤—ã –º–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è'
                                                                  ' –∫–æ–º–∞–Ω–¥–æ–π /profile.'
                                                                  '\n'
                                                                  '\nü´∂ –ü—Ä–∏—è—Ç–Ω–æ–≥–æ –∫–æ–¥–∏–Ω–≥–∞! ü´∂')
                    else:
                        # –û—Ç–≤–µ—Ç –≤ —Å–ª—É—á–∞–µ –µ—Å–ª–∏ –Ω–µ—Ç –ø–æ–¥–ø–∏—Å–∏ –∫ —Ñ–æ—Ç–æ
                        await update.effective_message.reply_text('ü§ñ –ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –Ω–∞–∑–≤–∞–Ω–∏–µ'
                                                                  ' –ø—Ä–æ–µ–∫—Ç–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞.'
                                                                  '\n'
                                                                  '\nüíõ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –æ–¥–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ'
                                                                  ' —Å –ø–æ–¥–ø–∏—Å—å—é, —á—Ç–æ–±—ã —è –º–æ–≥ —Å–æ–∑–¥–∞—Ç—å –¥–ª—è'
                                                                  ' –≤–∞—Å –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç.'
                                                                  '\n'
                                                                  '\nüëç –Ø –≤–µ—Ä—é, —á—Ç–æ —É –≤–∞—Å —ç—Ç–æ –ø–æ–ª—É—á–∏—Ç—Å—è –∏ '
                                                                  '\nü´∂ –ü—Ä–∏—è—Ç–Ω–æ–≥–æ –∫–æ–¥–∏–Ω–≥–∞! ü´∂')
                elif message.text:
                    # –ø–µ—Ä–µ–≤–æ–¥ —Å–æ—Å—Ç–æ—è–Ω–∏—è —é–∑–µ—Ä–∞ –≤ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º(–Ω–µ –∑–∞–ø–æ–ª–Ω—è–µ—Ç –ø—Ä–æ–µ–∫—Ç, –Ω–µ —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π)
                    list_of_states[user.id] = 'without_condition'
                    the_naughty_list[user.id] = ''
                    context.user_data['current_code'] = ''

                    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –±–µ–∑ —Ñ–æ—Ç–æ
                    if context.user_data['current_code']:
                        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ —Å–ª—É—á–∞–µ –µ—Å–ª–∏ –≤ –ø—Ä–æ–µ–∫—Ç–µ –µ—Å—Ç—å –∫–æ–¥
                        requests.post('http://127.0.0.1/api/v1/projects',
                                      json={'user_id': user.id,
                                            'name': message.text,
                                            'token': REST_API_TOKENS[0],
                                            'code': context.user_data['current_code']})
                        # –û–±–Ω—É–ª–µ–Ω–∏–µ –∫–æ–¥–∞
                        context.user_data['current_code'] = ''
                    else:
                        # –ï—Å–ª–∏ –∫–æ–¥–∞ –Ω–µ—Ç
                        requests.post('http://127.0.0.1/api/v1/projects',
                                      json={'user_id': user.id,
                                            'name': message.text,
                                            'token': REST_API_TOKENS[0]})

                    # –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º —Å–æ–∑–¥–∞–Ω–∏–∏ –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
                    await update.effective_message.reply_text('‚úÖ –í–∞—à –ø—Ä–æ–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!'
                                                              '\n'
                                                              '\n‚ùï –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∞—à –ø—Ä–æ–µ–∫—Ç,'
                                                              ' –ø–µ—Ä–µ–π–¥—è –≤ –º–µ–Ω—é –∏ –≤—ã–±—Ä–∞–≤ –≤–∫–ª–∞–¥–∫—É:'
                                                              '\nüìö –í–∞—à–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø—Ä–æ–µ–∫—Ç—ã'
                                                              '\n–ò–ª–∏ –∂–µ –≤—ã –º–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è'
                                                              ' –∫–æ–º–∞–Ω–¥–æ–π /profile.'
                                                              '\n'
                                                              '\nü´∂ –ü—Ä–∏—è—Ç–Ω–æ–≥–æ –∫–æ–¥–∏–Ω–≥–∞! ü´∂')
        # –û—Ç–≤–µ—Ç –ø—Ä–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞
        elif list_of_states[user.id].startswith('filling_out_the_project') \
                or list_of_states[user.id].startswith('filling_in_an_uncreated_project'):
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ç–æ —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª —Ç–µ–∫—Å—Ç, –∞ –Ω–µ —Ñ–æ—Ç–æ
            if message.text:
                # –ó–∞–º–µ–Ω–∞ —Ç–µ–∫—É—â–µ–≥–æ –∫–æ–¥–∞ –Ω–∞ –Ω–æ–≤—ã–π
                current_code = message.text
                context.user_data['current_code'] = current_code

                if list_of_states[user.id].startswith('filling_out_the_project'):
                    # –ö–Ω–æ–ø–∫–∏ –≤ —Å–ª—É—á–∞–µ –µ—Å–ª–∏ –ø—Ä–æ–µ–∫—Ç —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
                    keyboard = [
                        [InlineKeyboardButton("üì• –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–æ–¥",
                                              callback_data=f"create_saving {list_of_states[user.id].split()[1]}")],
                        [InlineKeyboardButton("‚úÖ –ó–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–¥", callback_data="code_running")],
                        [InlineKeyboardButton("‚ùóÔ∏è–£–¥–∞–ª–∏—Ç—å –ø—Ä–æ–µ–∫—Ç", callback_data="deletion")]
                    ]
                else:
                    # –ö–Ω–æ–ø–∫–∏ –≤ —Å–ª—É—á–∞–µ –µ—Å–ª–∏ –ø—Ä–æ–µ–∫—Ç –µ—â–µ –Ω–µ —Å–æ–∑–¥–∞–Ω
                    keyboard = [
                        [InlineKeyboardButton("üì• –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç —Å —Ç–µ–∫—É—â–∏–º –∫–æ–¥–æ–º",
                                              callback_data="create")],
                        [InlineKeyboardButton("‚úÖ –ó–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–¥", callback_data="code_running")]
                    ]
                reply_markup = InlineKeyboardMarkup(keyboard)
                text_message = \
                    '‚ùì–ö–æ–¥ –±—É–¥–µ—Ç —Å—á–∏—Ç—ã–≤–∞—Ç—å—Å—è ‚ÄºÔ∏è–ø–æ–ª–Ω–æ—Å—Ç—å—é‚ÄºÔ∏è —Å–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è' \
                    '\n‚ùî–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –≤—ã–π—Ç–∏ –∏–∑ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π /menu. üö™' \
                    '\n' \
                    '\n‚úèÔ∏è–í–∞—à –∫–æ–¥ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–ø—É—Å–∫–∞:' \
                    '\n' \
                    f'\n{current_code}' \
                    '\n' \
                    '\n.............................' \
                    '\n' \
                    '\n' \
                    '\n‚ùóÔ∏è–ö–æ–¥ –º–æ–∂–µ—Ç –≤—ã–≤–æ–¥–∏—Ç—å:' \
                    '\n‚ùï–í—ã–≤–µ–¥–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –±–µ–∑ —Ñ–æ—Ç–æ –∏–ª–∏ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ñ–æ—Ç–æ —Å–ª–µ–¥—É—é—â–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º.' \
                    '\n‚ùï–ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ—Ç —Ç–æ –∫–æ–¥ –Ω–∏—á–µ–≥–æ –Ω–µ –≤—ã–≤–æ–¥–∏—Ç.' \
                    '\n‚ùï–ï—Å–ª–∏ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞ –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç –æ—à–∏–±–∫–∞ —Ç–æ –≤ —Å–ª–µ–¥—É—é—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –æ–Ω–∞ –±—É–¥–µ—Ç –≤—ã–≤–µ–¥–µ–Ω–Ω–∞.'
                await update.message.reply_text(text_message, reply_markup=reply_markup)

            else:
                await update.effective_message.reply_text('ü§ñ –ü—Ä–æ—Å—Ç–∏, –Ω–æ –ø–æ—Ö–æ–∂–µ, —Ç—ã –æ—Ç–ø—Ä–∞–≤–∏–ª —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ.'
                                                          '\n'
                                                          '\nüíõ –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π,'
                                                          ' –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã —è —Å–º–æ–≥ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–ª—è —Ç–µ–±—è —Ç–≤–æ–π –∫–æ–¥ üíõ'
                                                          '\n'
                                                          '\nüëç –Ø –≤–µ—Ä—é, —á—Ç–æ —É —Ç–µ–±—è —ç—Ç–æ –ø–æ–ª—É—á–∏—Ç—Å—è –∏'
                                                          '\nü´∂ –ü—Ä–∏—è—Ç–Ω–æ–≥–æ –∫–æ–¥–∏–Ω–≥–∞! ü´∂')
    except KeyError:
        # –û—Ç–≤–µ—Ç –≤ —Å–ª—É—á–∞–µ –∫–æ–≥–¥–∞ –µ—â–µ –Ω–µ —É–∫–∞–∑–∞–Ω–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        await update.effective_message.reply_text('ü§ñ –Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é, —á—Ç–æ –≤—ã –Ω–∞–ø–∏—Å–∞–ª–∏, –ø–æ—Ç–æ–º—É —á—Ç–æ —è –≤—Å–µ–≥–æ –ª–∏—à—å –±–æ—Ç.'
                                                  ' –û–¥–Ω–∞–∫–æ, —è –º–æ–≥—É –ø–æ–º–æ—á—å –≤–∞–º —Å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö –∫–æ–º–∞–Ω–¥.'
                                                  '\n'
                                                  '\n‚ùì –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –º–æ–∏—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /help.'
                                                  '\n‚ùï–¢–∞–º –≤—ã –Ω–∞–π–¥–µ—Ç–µ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –∏ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞'
                                                  ' –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –º–µ–Ω—è.'
                                                  '\n'
                                                  '\nü´∂ –ü—Ä–∏—è—Ç–Ω–æ–≥–æ –∫–æ–¥–∏–Ω–≥–∞! ü´∂')


def main():
    application = Application.builder().token(BOT_TOKEN).build()
    application.add_handler(CallbackQueryHandler(create_command, pattern="^" + "create" + "$"))
    application.add_handler(CallbackQueryHandler(profile_command, pattern="^" + "profile" + "$"))
    application.add_handler(CallbackQueryHandler(help_command, pattern="^" + "help" + "$"))
    application.add_handler(CallbackQueryHandler(run_command, pattern="run_project"))
    application.add_handler(CallbackQueryHandler(create_saving_command, pattern="create_saving"))
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("help", help_command))
    application.add_handler(CommandHandler("menu", menu_command))
    application.add_handler(CommandHandler("profile", profile_command))
    application.add_handler(CommandHandler("create", create_command))
    application.add_handler(MessageHandler(filters.ALL, text_echo))
    application.run_polling()


# –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é main() –≤ —Å–ª—É—á–∞–µ –∑–∞–ø—É—Å–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞.
if __name__ == '__main__':
    # –°–ª–æ–≤–∞—Ä—å —Å–æ—Å—Ç–æ—è–Ω–∏–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    list_of_states = {}
    # –°–ª–æ–≤–∞—Ä—å –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–æ–≥–æ –Ω–∞—Ä—É—à–∏–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∫–∞–∫–æ–µ –ª–∏–±–æ –ø—Ä–∞–≤–∏–ª–æ
    the_naughty_list = {}
    main()
