import base64
from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.ext import Application, CallbackQueryHandler, CommandHandler, ContextTypes, MessageHandler, filters
from config import BOT_TOKEN, REST_API_TOKENS
import requests
import datetime


async def start(update, context):
    user = update.effective_user

    # –ü–µ—Ä–µ–≤–æ–¥ —Å–æ—Å—Ç–æ—è–Ω–∏—è —é–∑–µ—Ä–∞ –≤ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º(–Ω–µ –∑–∞–ø–æ–ª–Ω—è–µ—Ç –ø—Ä–æ–µ–∫—Ç, –Ω–µ —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç)
    list_of_states[user.id] = 'without_condition'
    the_naughty_list[user.id] = ''
    context.user_data['current_code'] = ''

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–≤–∞—Ç–∞—Ä–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    result = await context.bot.get_user_profile_photos(user.id)
    file_id = result['photos'][0][0]['file_id']
    file = await context.bot.get_file(file_id)
    url = file.file_path
    response = requests.get(url)
    encoded_content = base64.b64encode(response.content)

    # –°–æ–∑–¥–∞–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞ –¥–ª—è —é–∑–µ—Ä–∞
    requests.post('http://127.0.0.1/api/v1/users', json={'id': user.id, 'username': user.first_name,
                                                         'auth_date': str(datetime.date.today()),
                                                         'token': REST_API_TOKENS[0],
                                                         'photo_url': encoded_content.decode('utf-8')})
    await update.message.reply_html(
        f'üëã –ü—Ä–∏–≤–µ—Ç, {user.mention_html()}. –Ø –±–æ—Ç –ø—Ä–∏ —Å–∞–π—Ç–µ:'
        f'\n http://gaduka.sytes.net'
        f'\n'
        f'\nüêç–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –∫–∞–∫ –Ω–∞—É—á–∏—Ç—å—Å—è –ø–∏—Å–∞—Ç—å –∫–æ–¥, —Ç–∞–∫ –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å –µ–≥–æ'
        f'\n'
        f'\nüëâ –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ, –≤–≤–µ–¥–∏ /help!')


async def help_command(update, context):
    user = update.effective_user

    # –ü–µ—Ä–µ–≤–æ–¥ —Å–æ—Å—Ç–æ—è–Ω–∏—è —é–∑–µ—Ä–∞ –≤ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º(–Ω–µ –∑–∞–ø–æ–ª–Ω—è–µ—Ç –ø—Ä–æ–µ–∫—Ç, –Ω–µ —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç)
    list_of_states[user.id] = 'without_condition'
    the_naughty_list[user.id] = ''
    context.user_data['current_code'] = ''

    # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –æ—Ç–≤–µ—Ç–∞
    text_message = f'üêç –Ø –º–æ–≥—É –ø–æ–º–æ—á—å –≤–∞–º —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ —è–∑—ã–∫–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –ì–∞–¥—é–∫–∞.' \
                   f' –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–π—Ç–∏ –∫—É—Ä—Å –∏–ª–∏ –ø–æ—á–∏—Ç–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é –ø–æ –ì–∞–¥—é–∫–µ,' \
                   f' –∞ —Ç–∞–∫–∂–µ –∑–∞–ø—É—Å–∫–∞—Ç—å —Å–≤–æ–π –∫–æ–¥ –Ω–∞ —ç—Ç–æ–º —è–∑—ã–∫–µ –ø—Ä—è–º–æ –∑–¥–µ—Å—å.' \
                   f'\n' \
                   f'\nüïπÔ∏è –í—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:' \
                   f'\n' \
                   f'\nüó∫Ô∏è –ù–∞–≤–∏–≥–∞—Ü–∏—è:' \
                   f'\n ‚Ä¢ /help - –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–±–æ –º–Ω–µ ' \
                   f'\n ‚Ä¢ /menu - –ú–µ–Ω—é –≥–ª–∞–≤–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏.' \
                   f'\n' \
                   f'\nüìö –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥–∞–¥—é–∫–µ:' \
                   f'\n ‚Ä¢ /doc - –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –∏ –∫—É—Ä—Å –ø–æ –≥–∞–¥—é–∫–µ' \
                   f'\n' \
                   f'\n‚å®Ô∏è –†–∞–±–æ—Ç–∞ —Å —è–∑—ã–∫–æ–º:' \
                   f'\n ‚Ä¢ /profile - –¢–≤–æ–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø—Ä–æ–µ–∫—Ç—ã' \
                   f'\n ‚Ä¢ /create - –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞' \
                   f'\n ‚Ä¢ /run - –ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ –∫–æ–¥–∞ '

    # –û—Ç–≤–µ—Ç –Ω–∞ /help –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–æ–≥–æ –±—ã–ª–∞ –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ –∏–ª–∏ –ø—Ä–æ–∏–∑–æ—à–µ–ª –≤—ã–∑–æ–≤ –ø–æ –∫–æ–º–∞–Ω–¥–µ
    try:
        await update.callback_query.message.reply_text(text_message)
    except AttributeError:
        await update.message.reply_text(text_message)


async def menu_command(update, context):
    user = update.effective_user
    message = update.effective_message

    # –ø–µ—Ä–µ–≤–æ–¥ —Å–æ—Å—Ç–æ—è–Ω–∏—è —é–∑–µ—Ä–∞ –≤ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º(–Ω–µ –∑–∞–ø–æ–ª–Ω—è–µ—Ç –ø—Ä–æ–µ–∫—Ç, –Ω–µ —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π)
    list_of_states[user.id] = 'without_condition'
    the_naughty_list[user.id] = ''
    context.user_data['current_code'] = ''

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–≤–∞—Ç–∞—Ä–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    result = await context.bot.get_user_profile_photos(user.id)
    file_id = result['photos'][0][0]['file_id']

    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    keyboard = [
        [InlineKeyboardButton("üìÇ –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç", callback_data="create")],
        [InlineKeyboardButton("üöÄ–ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ –∫–æ–¥–∞", callback_data="run")],
        [InlineKeyboardButton("üìö –¢–≤–æ–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø—Ä–æ–µ–∫—Ç—ã", callback_data="profile")],
        [InlineKeyboardButton("‚Äçüéì–ö—É—Ä—Å –∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è", callback_data="dok")],
        [InlineKeyboardButton("‚Äç‚ùì –ü–æ–º–æ—â—å", callback_data="help"),
         InlineKeyboardButton("‚ùóÔ∏è –û –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏", callback_data="help")]]
    reply_markup = InlineKeyboardMarkup(keyboard)

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    response = requests.get(f'http://127.0.0.1/api/v1/users/{user.id}')

    # –û—Ç–≤–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É /menu
    await message.reply_photo(file_id, caption=f'üëã –ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞.'
                                               f' –ù–∏–∂–µ –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –¥–µ–π—Å—Ç–≤–∏–π:'
                                               f'\n'
                                               f'\n'
                                               f'\n‚ùï–í –ø—Ä–æ—Ü–µ—Å—Å–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞ –≤—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É'
                                               f'\n/help'
                                               f'\n–ò–ª–∏ –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É '
                                               f'\n‚ùì –ü–æ–º–æ—â—å'
                                               f'\n–ß—Ç–æ–±—ã –Ω–∞–π—Ç–∏ —Å–ø—Ä–∞–≤–æ—á–Ω—É—é'
                                               f' –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –∫–∞–∂–¥–æ–π –∫–æ–º–∞–Ω–¥—ã.'
                                               f'\n'
                                               f'\n', reply_markup=reply_markup)


def main():
    application = Application.builder().token(BOT_TOKEN).build()
    application.add_handler(CallbackQueryHandler(help_command, pattern="^" + "help" + "$"))
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("help", help_command))
    application.add_handler(CommandHandler("menu", menu_command))

    application.run_polling()


# –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é main() –≤ —Å–ª—É—á–∞–µ –∑–∞–ø—É—Å–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞.
if __name__ == '__main__':
    # –°–ª–æ–≤–∞—Ä—å —Å–æ—Å—Ç–æ—è–Ω–∏–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    list_of_states = {}
    # –°–ª–æ–≤–∞—Ä—å –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–æ–≥–æ –Ω–∞—Ä—É—à–∏–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∫–∞–∫–æ–µ –ª–∏–±–æ –ø—Ä–∞–≤–∏–ª–æ
    the_naughty_list = {}
    main()
